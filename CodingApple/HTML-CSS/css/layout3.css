@font-face {
  font-family: "작명~~~";
  src: url(../font/NotoSansKR-VariableFont_wght.ttf);
}

/* 
용량 줄이려면 .woff 쓰셈 
폰트파일 호스팅해주는 Google Fonts
*/

/* 
폰트 부드럽게 처리하려면 회전시켜보셈
*/
p,
h4,
h3,
h2,
h1,
span {
  transform: rotate(0.03deg);
}

/* HTML CSS 웹폰트 넣는 법과 안티앨리어싱 */
div,
input,
textarea {
  box-sizing: border-box;
}

body {
  margin: 0px;
  font-family: "작명~~~";
}

h1,
nav,
a {
  padding: 0;
  margin: 0;
}

/* position과 좌표 레이아웃 만들기 */

.main-background {
  width: 100%;
  height: 500px;
  position: relative;
  background-image: url(../image/pond.jpg);
  /* 배경 여러개 겹치기 가능 뒤에 ,url() 또 쓰면 됨 */
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  /*background-attachment: fixed;
  */
  /* filter: brightness(70%);
   안에 글씨가 있으면 글씨에도 필터입혀짐*/
  padding: 1px;
  /* margin collapse현상을 피하기 위해(싫으면 테두리 안붙게 하셈) */
}

.main-title {
  color: white;
  font-size: 40px;
  margin-top: 150px;
  text-align: center;
}

.main-content {
  color: #e2e2e2;
  padding: 0 80px;
  text-align: center;
}

.main-button {
  width: 100px;
  height: 50px;
  position: absolute;
  bottom: 100px;
  right: 100px;
  border-radius: 10px;
  border: 1px solid white;
  background: transparent;
  color: white;
  backdrop-filter: blur(10px);
  /* position: relative - 내 원래 위치를 기준으로 이동하세요 */
  /* position 부여하면 1. 좌표이동이 가능 2. 공중에 뜸 */
  /* position: static - 좌표 이동 x
    position: fixed - 현재 화면이 기준으로 고정되는 요소가 필요하면 ㄱㄱ */
  /* position: absolute 내 부모 태그 중에 position: relative 가진 부모 기준 */

  /* position: absolute 준 요소를 가운데 정렬하려면 */
  /* left: 0;
  right: 0;
  margin: auto;
  width: 150px; */

  /* 높을 수록 앞에 옵니다. */
  z-index: 5;
  cursor: pointer;
}

.box-container {
  /* 현재 창의 width는 곧 <body>의 width (반응형 레이아웃)*/
  width: 80%;

  /* 최대 폭 지정 */
  max-width: 1280px;
  margin-left: auto;
  margin-right: auto;
  background-color: #e2e2e2;
  text-align: center;
  padding: 50px 30px;
  position: relative;
  top: -50px;

  /* 이러면 width가 padding, border도 포함함  content-box(기존적용된 속성) */
  box-sizing: border-box;
}

/* 먼저 설정해놓고 코드 작성하면 편안함 */
div {
  box-sizing: border-box;
}

body {
  margin: 0px;
  padding: 0px;
}
/*  여기까지 */

.box-container h4 {
  font-size: 25px;
}

/* form & input */

/* input[속성명 = 속성값]으로 선택 가능 */
input[type="text"] {
  padding: 10px;
  font-size: 20px;
  border: 2px solid red;
  border-radius: 5px;
}

/* .header {
  display: flex;
  align-items: center;
  background-color: cornflowerblue;
  color: white;
  padding: 15px 20px;
}

.header div {
  flex-grow: 1;
}

.header a {
  color: inherit;
  text-decoration: none;
  font-size: 25px;
  margin-left: 15px;
} */

.header {
  background-color: cornflowerblue;
  color: white;
  padding: 20px;
}

.header a {
  color: inherit;
  text-decoration: none;
  font-size: 30px;
}

.product1 {
  position: absolute;
  right: 180px;
  top: 15px;
}

.product2 {
  position: absolute;
  right: 20px;
  top: 15px;
}

/* 반응형 레이아웃 만들기 */
.test {
  width: 50vw;
  height: 50vh;
  background: grey;
}

/* 
단위 더 알아보기
vw(브라우저 폭에 비례)
vh(브라우저 높이에 비례)
rem(기본 폰트사이즈에 비례) 기본은 16px;로 설정이 되어있음
em(내 폰트사이즈의 X배)
*/

/* media query 문법 쓰면 됩니다. 큰 사이즈 -> 작은 사이즈 순으로 작성 */
/* (참고) breakpoint 기준 px값은 다른 사람 따라하는걸 권장 
1200px ---- 여기부터 태블릿 디자인
992px
768px ---- 여기부터 모바일 디자인
576px 
단위들 많이 사용함 (3개정도만 사용하기)
*/

/* 현재 브라우저 폭이 1200px 이하일 경우 */
@media screen and (max-width: 1200px) {
  .main-title {
    font-size: 30px;
    /* 이걸 적용해주세요 */
  }

  .header h1 {
    font-size: 25px;
  }

  .header a {
    font-size: 20px;
  }

  .product1 {
    right: 120px;
  }

  .product1,
  .product2 {
    top: 20px;
  }
}

@media screen and (max-width: 768px) {
  .main-title {
    font-size: 20px;
  }

  .header a {
    font-size: 18px;
  }

  .product1,
  .product2 {
    top: 20px;
  }
}

@media screen and (max-width: 576px) {
  .main-title {
    font-size: 16px;
  }

  .header a {
    font-size: 16px;
  }
}
